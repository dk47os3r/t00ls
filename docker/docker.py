# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'docker.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sys
import os

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow

docker_cmd = "docker -H {ip} ps -a"
command = "docker -H {ip} run -it -v /:/mnt --entrypoint {bin} mysql:8.0 {cmd}"
divider = "------------------------------------------------------------------------"*2


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.ip_text = QtWidgets.QLineEdit(self.centralwidget)
        self.ip_text.setObjectName("ip_text")
        self.horizontalLayout.addWidget(self.ip_text)
        self.docker_btn = QtWidgets.QPushButton(self.centralwidget)
        self.docker_btn.setObjectName("docker_btn")
        self.horizontalLayout.addWidget(self.docker_btn)
        self.horizontalLayout_3.addLayout(self.horizontalLayout)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_2.addWidget(self.label_2)
        self.image_text = QtWidgets.QLineEdit(self.centralwidget)
        self.image_text.setObjectName("image_text")
        self.horizontalLayout_2.addWidget(self.image_text)
        self.push_btn = QtWidgets.QPushButton(self.centralwidget)
        self.push_btn.setObjectName("push_btn")
        self.horizontalLayout_2.addWidget(self.push_btn)
        self.horizontalLayout_3.addLayout(self.horizontalLayout_2)
        self.gridLayout.addLayout(self.horizontalLayout_3, 0, 0, 1, 1)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.cmd_text = QtWidgets.QLineEdit(self.centralwidget)
        self.cmd_text.setObjectName("cmd_text")
        self.horizontalLayout_4.addWidget(self.cmd_text)
        self.cmd_btn = QtWidgets.QPushButton(self.centralwidget)
        self.cmd_btn.setObjectName("cmd_btn")
        self.horizontalLayout_4.addWidget(self.cmd_btn)
        self.gridLayout.addLayout(self.horizontalLayout_4, 1, 0, 1, 1)
        self.result_text = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.result_text.setObjectName("result_text")
        self.gridLayout.addWidget(self.result_text, 2, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.ip = ""
        self.docker_btn.clicked.connect(self.get_dockers)
        self.push_btn.clicked.connect(self.push_image)
        self.cmd_btn.clicked.connect(self.exec_cmd)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "ip:"))
        self.docker_btn.setText(_translate("MainWindow", "获取镜像"))
        self.label_2.setText(_translate("MainWindow", "镜像id"))
        self.push_btn.setText(_translate("MainWindow", "搭载"))
        self.cmd_btn.setText(_translate("MainWindow", "执行命令"))

    def get_result(self, command):
        result = os.popen(command)
        self.result_text.appendPlainText(result.read() + "\n" + divider)

    def get_dockers(self):
        try:
            if self.ip_text.text() != "":
                if self.ip != "":
                    self.result_text.setPlainText("")
                self.ip = self.ip_text.text()
                self.get_result(docker_cmd.format(ip = self.ip))
            else:
                self.result_text.appendPlainText("请输入ip！\n"+divider)
        except Exception as e:
            print(e)

    def push_image(self):
        try:
            if self.ip_text.text() != "" and self.image_text.text() != "":
                self.ip = self.ip_text.text()
                self.image = self.image_text.text()
                self.result_text.appendPlainText(os.popen(command.format(ip=self.ip, bin="whoami", cmd="")).read())
                self.result_text.appendPlainText(" 搭载成功!\n"+divider)
            else:
                self.result_text.appendPlainText("ip或镜像id不完整！\n" + divider)
        except Exception as e:
            print(e)
            self.result_text.appendPlainText("搭载失败!\n" + divider)

    def exec_cmd(self):
        if self.ip_text.text() != "" and self.image_text.text() != "" and self.cmd_text.text() != "":
            cmd_list = self.cmd_text.text().split(" ")
            if len(cmd_list) == 1:
                bin = cmd_list[0]
                cmd = ""
            else:
                bin = cmd_list[0]
                cmd = " ".join(cmd_list[1:])
            self.get_result(command.format(ip=self.ip, bin=bin, cmd=cmd))
        else:
            self.result_text.appendPlainText("ip、镜像id或命令不完整！\n" + divider)




if __name__ == '__main__':
    app = QApplication(sys.argv)
    MainWindow = QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
